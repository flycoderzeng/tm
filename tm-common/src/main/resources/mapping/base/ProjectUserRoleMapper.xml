<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tm.common.base.mapper.ProjectUserRoleMapper" >
    <resultMap id="BaseResultMap" type="com.tm.common.base.model.ProjectUserRole" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="project_id" property="projectId" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="role_chinese_name" property="roleChineseName" jdbcType="VARCHAR" />
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
        <result column="add_user" property="addUser" jdbcType="VARCHAR" />
        <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
        <result column="last_modify_user" property="lastModifyUser" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, project_id, user_id, role_id, add_time, add_user, last_modify_time, last_modify_user
    </sql>

    <select id="getUserRoleList" parameterType="com.tm.common.base.model.ProjectUser" resultMap="BaseResultMap">
        select
               t1.*,t2.chinese_name role_chinese_name
        from
             project_user_role t1, roles t2
        where
              t1.project_id=#{projectId,jdbcType=INTEGER} and user_id=#{userId,jdbcType=INTEGER} and t1.role_id=t2.id
        order by t1.role_id asc
    </select>

    <delete id="deleteByProjectIdUserId" parameterType="com.tm.common.base.model.ProjectUser">
        delete from project_user_role where project_id=#{projectId,jdbcType=INTEGER} and user_id=#{userId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteProjectUserRole" parameterType="com.tm.common.entities.system.DeleteProjectUserRoleBody">
        delete from project_user_role
        where
        project_id=#{projectId,jdbcType=INTEGER}
        and user_id=#{userId,jdbcType=INTEGER}
        and role_id=#{roleId,jdbcType=INTEGER}
    </delete>

    <select id="selectByProjectUserRole" resultMap="BaseResultMap" parameterType="com.tm.common.base.model.ProjectUserRole">
        select * from project_user_role where project_id=#{projectId,jdbcType=INTEGER} and user_id=#{userId,jdbcType=INTEGER} and role_id=#{roleId,jdbcType=INTEGER}
    </select>

    <update id="updateBySelective" parameterType="com.tm.common.base.model.ProjectUserRole">
        update project_user_role
        <set >
            <if test="projectId != null" >
                project_id = #{projectId,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null" >
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="addTime != null" >
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="addUser != null" >
                add_user = #{addUser,jdbcType=VARCHAR},
            </if>
            <if test="lastModifyTime != null" >
                last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifyUser != null" >
                last_modify_user = #{lastModifyUser,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="insertBySelective" parameterType="com.tm.common.base.model.ProjectUserRole" useGeneratedKeys="true" keyProperty="id">
        insert into project_user_role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="projectId != null" >
                project_id,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="roleId != null" >
                role_id,
            </if>
            <if test="addTime != null" >
                add_time,
            </if>
            <if test="addUser != null" >
                add_user,
            </if>
            <if test="lastModifyTime != null" >
                last_modify_time,
            </if>
            <if test="lastModifyUser != null" >
                last_modify_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="projectId != null" >
                #{projectId,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null" >
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="addTime != null" >
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="addUser != null" >
                #{addUser,jdbcType=VARCHAR},
            </if>
            <if test="lastModifyTime != null" >
                #{lastModifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifyUser != null" >
                #{lastModifyUser,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
</mapper>